{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"H:\\\\Documents\\\\UNIVERSITY\\\\2021\\\\COMP3130\\\\majorAssignment\\\\app\\\\screens\\\\RegisterScreen.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport AppButton from \"../components/AppButton\";\nimport AppTextInput from \"../components/AppTextInput\";\nimport AppScreen from \"../components/AppScreen\";\nimport AppText from \"../components/AppText\";\nimport AppFormPicker from \"../components/AppFormPicker\";\nimport DataManager from \"../config/DataManager\";\nimport colors from \"../config/color\";\nvar categories = [{\n  label: \"Food\",\n  icon: \"food\",\n  value: 1\n}, {\n  label: \"Sightseeing\",\n  icon: \"earth\",\n  value: 2\n}, {\n  label: \"Accomodation\",\n  icon: \"bed\",\n  value: 3\n}];\n\nfunction RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      bio = _useState8[0],\n      setBio = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      nameError = _useState10[0],\n      setNameError = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      emailError = _useState12[0],\n      setEmailError = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      passwordError = _useState14[0],\n      setPasswordError = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      bioError = _useState16[0],\n      setBioError = _useState16[1];\n\n  var doErrorCheck = function doErrorCheck() {\n    setNameError(name.length > 0 ? \"\" : \"Please input a valid Name\");\n    setEmailError(email.length > 0 ? \"\" : \"Please input a valid Email\");\n    setPasswordError(password.length > 0 ? \"\" : \"Please input a valid Password\");\n    setBioError(bio.length > 0 ? \"\" : \"Please input a valid Bio\");\n    return name.length > 0 && email.length > 0 && password.length > 0 && bio.length > 0 ? true : false;\n  };\n\n  var addUser = function addUser() {\n    var commonData = DataManager.getInstance();\n    var initialUsers = commonData.getUsers();\n    var listingID = initialUsers.length + 1;\n    var newUser = {\n      name: name,\n      email: email,\n      password: password,\n      bio: bio,\n      image: {\n        uri: \"https://robohash.org/\" + name\n      },\n      id: listingID\n    };\n    console.log(newUser);\n    commonData.addUser(newUser);\n  };\n\n  return React.createElement(AppScreen, {\n    style: styles.center,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, React.createElement(AppText, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Register New User\"), React.createElement(AppTextInput, {\n    icon: \"rename-box\",\n    placeholder: \"Name\",\n    autoCorrect: false,\n    value: name,\n    onChangeText: function onChangeText(inputText) {\n      return setName(inputText);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), nameError.length > 0 ? React.createElement(Text, {\n    style: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 41\n    }\n  }, nameError) : React.createElement(React.Fragment, null), React.createElement(AppTextInput, {\n    icon: \"email\",\n    placeholder: \"Email Address\",\n    keyboardType: \"email-address\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    value: email,\n    onChangeText: function onChangeText(inputText) {\n      return setEmail(inputText);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), emailError.length > 0 ? React.createElement(Text, {\n    style: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 42\n    }\n  }, emailError) : React.createElement(React.Fragment, null), React.createElement(AppTextInput, {\n    icon: \"lock\",\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    value: password,\n    onChangeText: function onChangeText(inputText) {\n      return setPassword(inputText);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), passwordError.length > 0 ? React.createElement(Text, {\n    style: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 45\n    }\n  }, passwordError) : React.createElement(React.Fragment, null), React.createElement(TextInput, {\n    placeholder: \"Tell everyone a bit about yourself!\",\n    style: styles.input,\n    onChangeText: setBio,\n    value: bio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), bioError.length > 0 ? React.createElement(Text, {\n    style: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 40\n    }\n  }, bioError) : React.createElement(React.Fragment, null), React.createElement(AppButton, {\n    onPress: function onPress() {\n      if (doErrorCheck()) {\n        addUser();\n        navigation.navigate(\"Login\");\n      }\n    },\n    icon: \"plus\",\n    title: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  center: {\n    alignItems: 'center',\n    marginTop: 55\n  },\n  text: {\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  smallText: {\n    color: colors.black\n  },\n  input: {\n    height: 200,\n    width: '95%',\n    margin: 12,\n    borderWidth: 2,\n    borderRadius: 10,\n    padding: 10,\n    backgroundColor: colors.grey,\n    textAlignVertical: 'top'\n  },\n  error: {\n    color: '#FF0000',\n    fontSize: 13,\n    marginBottom: 8,\n    marginTop: -5\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"sources":["H:/Documents/UNIVERSITY/2021/COMP3130/majorAssignment/app/screens/RegisterScreen.js"],"names":["React","useState","Formik","Yup","AppButton","AppTextInput","AppScreen","AppText","AppFormPicker","DataManager","colors","categories","label","icon","value","RegisterScreen","navigation","name","setName","email","setEmail","password","setPassword","bio","setBio","nameError","setNameError","emailError","setEmailError","passwordError","setPasswordError","bioError","setBioError","doErrorCheck","length","addUser","commonData","getInstance","initialUsers","getUsers","listingID","newUser","image","uri","id","console","log","styles","center","text","inputText","error","input","navigate","StyleSheet","create","alignItems","marginTop","fontWeight","marginBottom","smallText","color","black","height","width","margin","borderWidth","borderRadius","padding","backgroundColor","grey","textAlignVertical","fontSize"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\r\nimport {StyleSheet, Text, TextInput } from 'react-native';\r\nimport {Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport AppButton from '../components/AppButton';\r\nimport AppTextInput from '../components/AppTextInput';\r\nimport AppScreen from '../components/AppScreen';\r\nimport AppText from '../components/AppText';\r\nimport AppFormPicker from '../components/AppFormPicker';\r\nimport DataManager from '../config/DataManager';\r\n\r\nimport colors from '../config/color';\r\n\r\n\r\nconst categories = [\r\n    {label: \"Food\", icon: \"food\", value: 1},\r\n    {label: \"Sightseeing\", icon: \"earth\", value: 2},\r\n    {label: \"Accomodation\", icon: \"bed\", value: 3},\r\n]\r\n\r\nfunction RegisterScreen({navigation}) { \r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [bio, setBio] = useState(\"\");\r\n    const [nameError, setNameError] = useState(\"\")\r\n    const [emailError, setEmailError] = useState(\"\")\r\n    const [passwordError, setPasswordError] = useState(\"\")\r\n    const [bioError, setBioError] = useState(\"\")\r\n\r\n    const doErrorCheck = () => {\r\n        setNameError(name.length > 0 ? \"\" : \"Please input a valid Name\")\r\n        setEmailError(email.length > 0 ? \"\" : \"Please input a valid Email\")\r\n        setPasswordError(password.length > 0 ? \"\" : \"Please input a valid Password\")\r\n        setBioError(bio.length > 0 ? \"\" : \"Please input a valid Bio\")\r\n        return((name.length > 0 && email.length > 0 && password.length > 0 && bio.length > 0 ? true : false))\r\n    }\r\n\r\n    const addUser = () => {\r\n\r\n        let commonData = DataManager.getInstance();\r\n    \r\n        const initialUsers = commonData.getUsers()\r\n        const listingID = initialUsers.length + 1\r\n        const newUser = {\r\n            name: name,\r\n            email: email,\r\n            password: password,\r\n            bio: bio,\r\n            image: {uri: `https://robohash.org/${name}`},\r\n            id: listingID\r\n        }\r\n\r\n        console.log(newUser);\r\n        commonData.addUser(newUser)\r\n    }\r\n\r\n    return (\r\n        <AppScreen style={styles.center}>\r\n            <AppText style={styles.text}>Register New User</AppText>\r\n                <AppTextInput \r\n                    icon=\"rename-box\" \r\n                    placeholder=\"Name\" \r\n                    autoCorrect={false}\r\n                    value={name}\r\n                    onChangeText={(inputText) => setName(inputText)}/>\r\n                {nameError.length > 0 ? <Text style={styles.error}>{nameError}</Text> : <></>}\r\n                <AppTextInput \r\n                    icon=\"email\" \r\n                    placeholder=\"Email Address\" \r\n                    keyboardType=\"email-address\"  \r\n                    autoCapitalize='none' \r\n                    autoCorrect={false}\r\n                    value={email}\r\n                    onChangeText={(inputText) => setEmail(inputText)}/>\r\n                {emailError.length > 0 ? <Text style={styles.error}>{emailError}</Text> : <></>}\r\n                <AppTextInput \r\n                    icon=\"lock\" \r\n                    placeholder=\"Password\"\r\n                    secureTextEntry= {true} \r\n                    autoCapitalize='none' \r\n                    autoCorrect={false}\r\n                    value={password}\r\n                    onChangeText={(inputText) => setPassword(inputText)}/>\r\n                {passwordError.length > 0 ? <Text style={styles.error}>{passwordError}</Text> : <></>}\r\n               \r\n                <TextInput\r\n                    placeholder=\"Tell everyone a bit about yourself!\"\r\n                    style={styles.input}\r\n                    onChangeText={setBio}\r\n                    value={bio}/>\r\n                {bioError.length > 0 ? <Text style={styles.error}>{bioError}</Text> : <></>}\r\n                <AppButton \r\n                    onPress={() => {\r\n                        if(doErrorCheck()) {\r\n                            addUser();\r\n                            navigation.navigate(\"Login\")  \r\n                        }\r\n                    }}\r\n                    icon=\"plus\" \r\n                    title=\"Register\"/>\r\n        </AppScreen>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    center:{\r\n        alignItems: 'center',\r\n        marginTop: 55\r\n    },\r\n    text:{\r\n        fontWeight: 'bold',\r\n        marginBottom: 10\r\n    },\r\n    smallText: {\r\n        color: colors.black\r\n    },\r\n    input: {\r\n        height: 200,\r\n        width: '95%',\r\n        margin: 12,\r\n        borderWidth: 2,\r\n        borderRadius: 10,\r\n        padding: 10,\r\n        backgroundColor: colors.grey,\r\n        textAlignVertical: 'top'\r\n      },\r\n      error: {\r\n          color: '#FF0000',\r\n          fontSize: 13,\r\n          marginBottom: 8,\r\n          marginTop: -5\r\n\r\n      }\r\n})\r\n\r\nexport default RegisterScreen;"]},"metadata":{},"sourceType":"module"}