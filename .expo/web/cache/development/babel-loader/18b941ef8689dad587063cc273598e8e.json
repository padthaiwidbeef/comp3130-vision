{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"H:\\\\Documents\\\\UNIVERSITY\\\\2021\\\\COMP3130\\\\majorAssignment\\\\app\\\\components\\\\AppFormPicker.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport colors from \"../config/color\";\nimport AppText from \"./AppText\";\nimport AppScreen from \"./AppScreen\";\nimport AppListItem from \"./AppListItem\";\nimport AppIcon from \"./AppIcon\";\n\nfunction AppFormPicker(_ref) {\n  var _this = this;\n\n  var data = _ref.data,\n      icon = _ref.icon,\n      title = _ref.title,\n      selectedItem = _ref.selectedItem,\n      onSelectItem = _ref.onSelectItem;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return setModalVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.firstItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: icon,\n    size: 24,\n    color: colors.black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }\n  }), React.createElement(AppText, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }, selectedItem ? selectedItem.label : title)), React.createElement(MaterialCommunityIcons, {\n    name: \"chevron-down\",\n    size: 24,\n    color: colors.black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }))), React.createElement(Modal, {\n    visible: modalVisible,\n    animationType: \"slide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, React.createElement(AppScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"Close\",\n    onPress: function onPress() {\n      return setModalVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.modalContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(item) {\n      return item.value.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(AppListItem, {\n        onPress: function onPress() {\n          setModalVisible(false);\n          onSelectItem(item);\n        },\n        title: item.label,\n        iconComponent: React.createElement(AppIcon, {\n          name: item.icon,\n          size: 50,\n          iconColor: colors.black,\n          backgroundColor: colors.grey,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 70\n          }\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  })))));\n}\n\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: 13,\n    color: colors.black,\n    marginLeft: 7\n  },\n  firstItems: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    borderWidth: 2,\n    backgroundColor: colors.grey,\n    borderRadius: 15,\n    paddingLeft: 15,\n    paddingRight: 10,\n    height: 53,\n    marginBottom: 20,\n    width: '95%'\n  },\n  modalContainer: {\n    padding: 20\n  }\n});\nexport default AppFormPicker;","map":{"version":3,"sources":["H:/Documents/UNIVERSITY/2021/COMP3130/majorAssignment/app/components/AppFormPicker.js"],"names":["React","useState","MaterialCommunityIcons","colors","AppText","AppScreen","AppListItem","AppIcon","AppFormPicker","data","icon","title","selectedItem","onSelectItem","modalVisible","setModalVisible","styles","container","firstItems","black","text","label","modalContainer","item","value","toString","grey","StyleSheet","create","fontSize","color","marginLeft","flexDirection","alignItems","justifyContent","borderWidth","backgroundColor","borderRadius","paddingLeft","paddingRight","height","marginBottom","width","padding"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { View, Text, StyleSheet, TouchableWithoutFeedback, Modal, Button, FlatList } from 'react-native';\r\n\r\nimport {MaterialCommunityIcons} from '@expo/vector-icons'\r\nimport colors from '../config/color';\r\n\r\nimport AppText from './AppText';\r\nimport AppScreen from './AppScreen';\r\nimport AppListItem from './AppListItem';\r\nimport AppIcon from './AppIcon'\r\n\r\n\r\n\r\nfunction AppFormPicker({data, icon, title, selectedItem, onSelectItem}) {\r\n    \r\n\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <TouchableWithoutFeedback onPress={() => setModalVisible(true)}>\r\n                <View style={styles.container}>\r\n                    <View style={styles.firstItems}>\r\n                        <MaterialCommunityIcons name={icon} size={24} color={colors.black}/>\r\n                        <AppText style={styles.text}>{selectedItem ? selectedItem.label : title }</AppText>\r\n                    </View>\r\n                    <MaterialCommunityIcons name=\"chevron-down\" size={24} color={colors.black}/>\r\n                </View>\r\n            </TouchableWithoutFeedback>\r\n            <Modal visible={modalVisible} animationType=\"slide\">\r\n                <AppScreen>\r\n                    <Button title=\"Close\" onPress={() => setModalVisible(false)}></Button>\r\n                    <View style={styles.modalContainer}>\r\n                        <FlatList \r\n                            data={data}\r\n                            keyExtractor={item => item.value.toString()}\r\n                            renderItem= { ({item}) =>\r\n                                <AppListItem onPress={() => {\r\n                                    setModalVisible(false)\r\n                                    onSelectItem(item)\r\n                                }} title={item.label} iconComponent={<AppIcon name={item.icon} size={50} iconColor={colors.black} backgroundColor={colors.grey}/>}/>\r\n                            }/>\r\n                    </View>\r\n                </AppScreen>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    text: {\r\n        fontSize:13,\r\n        color: colors.black,\r\n        marginLeft: 7,\r\n    },\r\n    firstItems: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center'\r\n    },\r\n    container: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        borderWidth: 2,\r\n        backgroundColor: colors.grey,\r\n        borderRadius: 15,\r\n        paddingLeft: 15,\r\n        paddingRight: 10,\r\n        height: 53,\r\n        marginBottom: 20,\r\n        width: '95%',\r\n    },\r\n    modalContainer: {\r\n        padding: 20\r\n    }\r\n})\r\n\r\nexport default AppFormPicker;"]},"metadata":{},"sourceType":"module"}