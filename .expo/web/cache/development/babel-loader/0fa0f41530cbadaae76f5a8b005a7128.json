{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"H:\\\\Documents\\\\UNIVERSITY\\\\2021\\\\COMP3130\\\\majorAssignment\\\\app\\\\screens\\\\NewListingScreen.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as ImagePicker from 'expo-image-picker';\nimport AppButton from \"../components/AppButton\";\nimport AppTextInput from \"../components/AppTextInput\";\nimport AppScreen from \"../components/AppScreen\";\nimport AppText from \"../components/AppText\";\nimport AppFormPicker from \"../components/AppFormPicker\";\nimport DataManager from \"../config/DataManager\";\nimport colors from \"../config/color\";\nvar categories = [{\n  label: \"Food\",\n  icon: \"food\",\n  value: 1\n}, {\n  label: \"Sightseeing\",\n  icon: \"earth\",\n  value: 2\n}, {\n  label: \"Accomodation\",\n  icon: \"bed\",\n  value: 3\n}];\n\nfunction NewListingScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      place = _useState2[0],\n      setPlace = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      location = _useState4[0],\n      setLocation = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      category = _useState6[0],\n      setCategory = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      description = _useState8[0],\n      onChangeDescription = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      placeError = _useState10[0],\n      setPlaceError = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      locationError = _useState12[0],\n      setLocationError = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      categoryError = _useState14[0],\n      setCategoryError = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      descriptionError = _useState16[0],\n      setDescriptionError = _useState16[1];\n\n  var doErrorCheck = function doErrorCheck() {\n    setPlaceError(place.length > 0 ? \"\" : \"Please input a valid Place\");\n    setLocationError(place.length > 0 ? \"\" : \"Please input a valid Location\");\n    setCategoryError(category.label.length > 0 ? \"\" : \"Please input a valid Category\");\n    setDescriptionError(description.length > 0 ? \"\" : \"Please input a valid Description\");\n    return place.length > 0 && place.length > 0 && category.label.length > 0 && description.length > 0 ? true : false;\n  };\n\n  var addListing = function addListing() {\n    var commonData = DataManager.getInstance();\n    var initialListings = commonData.getListings();\n    var listingID = initialListings.length + 1;\n    var newListing = {\n      place: place,\n      location: location,\n      category: category.label,\n      description: description,\n      image: require(\"../assets/images/question-mark.png\"),\n      id: listingID\n    };\n    console.log(newListing);\n    commonData.addListing(newListing);\n  };\n\n  return React.createElement(AppScreen, {\n    style: styles.center,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, React.createElement(AppText, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Create New Listing\"), React.createElement(AppTextInput, {\n    icon: \"city\",\n    placeholder: \"Place\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    value: place,\n    onChangeText: function onChangeText(inputText) {\n      return setPlace(inputText);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }), placeError.length > 0 ? React.createElement(Text, {\n    style: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 42\n    }\n  }, placeError) : React.createElement(React.Fragment, null), React.createElement(AppTextInput, {\n    icon: \"map-marker\",\n    placeholder: \"Location\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    value: location,\n    onChangeText: function onChangeText(inputText) {\n      return setLocation(inputText);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }), locationError.length > 0 ? React.createElement(Text, {\n    style: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 45\n    }\n  }, locationError) : React.createElement(React.Fragment, null), React.createElement(AppFormPicker, {\n    selectedItem: category,\n    onSelectItem: function onSelectItem(item) {\n      return setCategory(item);\n    },\n    data: categories,\n    icon: \"grid\",\n    title: \"Select Category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }), categoryError.length > 0 ? React.createElement(Text, {\n    style: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 45\n    }\n  }, categoryError) : React.createElement(React.Fragment, null), React.createElement(TextInput, {\n    placeholder: \"Description\",\n    style: styles.input,\n    onChangeText: onChangeDescription,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }), descriptionError.length > 0 ? React.createElement(Text, {\n    style: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 48\n    }\n  }, descriptionError) : React.createElement(React.Fragment, null), React.createElement(AppButton, {\n    onPress: function onPress() {\n      if (doErrorCheck()) {\n        addListing();\n        navigation.navigate(\"Listings\");\n      }\n    },\n    icon: \"plus\",\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  center: {\n    alignItems: 'center',\n    marginTop: 55\n  },\n  text: {\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  smallText: {\n    color: colors.black\n  },\n  input: {\n    height: 200,\n    width: '95%',\n    margin: 12,\n    borderWidth: 2,\n    borderRadius: 10,\n    padding: 10,\n    backgroundColor: colors.grey,\n    textAlignVertical: 'top'\n  },\n  error: {\n    color: '#FF0000',\n    fontSize: 13,\n    marginBottom: 8,\n    marginTop: -5\n  }\n});\nexport default NewListingScreen;","map":{"version":3,"sources":["H:/Documents/UNIVERSITY/2021/COMP3130/majorAssignment/app/screens/NewListingScreen.js"],"names":["React","useState","ImagePicker","AppButton","AppTextInput","AppScreen","AppText","AppFormPicker","DataManager","colors","categories","label","icon","value","NewListingScreen","navigation","place","setPlace","location","setLocation","category","setCategory","description","onChangeDescription","placeError","setPlaceError","locationError","setLocationError","categoryError","setCategoryError","descriptionError","setDescriptionError","doErrorCheck","length","addListing","commonData","getInstance","initialListings","getListings","listingID","newListing","image","require","id","console","log","styles","center","text","inputText","error","item","input","navigate","StyleSheet","create","alignItems","marginTop","fontWeight","marginBottom","smallText","color","black","height","width","margin","borderWidth","borderRadius","padding","backgroundColor","grey","textAlignVertical","fontSize"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\r\nimport {StyleSheet, Text, TextInput } from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nimport AppButton from '../components/AppButton';\r\nimport AppTextInput from '../components/AppTextInput';\r\nimport AppScreen from '../components/AppScreen';\r\nimport AppText from '../components/AppText';\r\nimport AppFormPicker from '../components/AppFormPicker';\r\nimport DataManager from '../config/DataManager';\r\n\r\nimport colors from '../config/color';\r\n\r\n\r\nconst categories = [\r\n    {label: \"Food\", icon: \"food\", value: 1},\r\n    {label: \"Sightseeing\", icon: \"earth\", value: 2},\r\n    {label: \"Accomodation\", icon: \"bed\", value: 3},\r\n]\r\n\r\n\r\n\r\nfunction NewListingScreen({navigation}) { \r\n\r\n    const [place, setPlace] = useState(\"\");\r\n    const [location, setLocation] = useState(\"\");\r\n    const [category, setCategory] = useState(\"\");\r\n    const [description, onChangeDescription] = useState(\"\");\r\n    // const [image, setImage] = useState()\r\n    const [placeError, setPlaceError] = useState(\"\")\r\n    const [locationError, setLocationError] = useState(\"\")\r\n    const [categoryError, setCategoryError] = useState(\"\")\r\n    const [descriptionError, setDescriptionError] = useState(\"\")\r\n\r\n    // let openImagePickerAsync = async () => {\r\n    //     let permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n    \r\n    //     if (permissionResult.granted === false) {\r\n    //       alert(\"Permission to access camera roll is required!\");\r\n    //       return;\r\n    //     }\r\n\r\n    //     if (pickerResult.cancelled === true) {\r\n    //         return;\r\n    //       }\r\n\r\n    //     setImage({path: pickerResult.uri})\r\n    \r\n    //     let pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n    //     console.log(pickerResult);\r\n    //   }\r\n\r\n    const doErrorCheck = () => {\r\n        setPlaceError(place.length > 0 ? \"\" : \"Please input a valid Place\")\r\n        setLocationError(place.length > 0 ? \"\" : \"Please input a valid Location\")\r\n        setCategoryError(category.label.length > 0 ? \"\" : \"Please input a valid Category\")\r\n        setDescriptionError(description.length > 0 ? \"\" : \"Please input a valid Description\")\r\n        return((place.length > 0 && place.length > 0 && category.label.length > 0 && description.length > 0 ? true : false))\r\n    }\r\n\r\n    const addListing = () => {\r\n        let commonData = DataManager.getInstance();\r\n    \r\n        const initialListings = commonData.getListings()\r\n        const listingID = initialListings.length + 1\r\n        const newListing = {\r\n            place: place,\r\n            location: location,\r\n            category: category.label,\r\n            description: description,\r\n            image: require('../assets/images/question-mark.png'),\r\n            id: listingID\r\n        }\r\n\r\n        console.log(newListing);\r\n        commonData.addListing(newListing)\r\n    }\r\n\r\n    return (\r\n        <AppScreen style={styles.center}>\r\n            <AppText style={styles.text}>Create New Listing</AppText>\r\n                <AppTextInput \r\n                    icon=\"city\" \r\n                    placeholder=\"Place\" \r\n                    autoCapitalize='none' \r\n                    autoCorrect={false}\r\n                    value={place}\r\n                    onChangeText={(inputText) => setPlace(inputText)}/>\r\n                {placeError.length > 0 ? <Text style={styles.error}>{placeError}</Text> : <></>}\r\n                <AppTextInput \r\n                    icon=\"map-marker\" \r\n                    placeholder=\"Location\"\r\n                    autoCapitalize='none' \r\n                    autoCorrect={false}\r\n                    value={location}\r\n                    onChangeText={(inputText) => setLocation(inputText)}/>\r\n                {locationError.length > 0 ? <Text style={styles.error}>{locationError}</Text> : <></>}\r\n                <AppFormPicker selectedItem={category} onSelectItem={item => setCategory(item)} data={categories} icon='grid' title=\"Select Category\"/>\r\n                {categoryError.length > 0 ? <Text style={styles.error}>{categoryError}</Text> : <></>}\r\n                <TextInput\r\n                    placeholder=\"Description\"\r\n                    style={styles.input}\r\n                    onChangeText={onChangeDescription}\r\n                    value={description}/>\r\n                {descriptionError.length > 0 ? <Text style={styles.error}>{descriptionError}</Text> : <></>}\r\n                <AppButton \r\n                    onPress={() => {\r\n                        if(doErrorCheck()) {\r\n                            addListing();\r\n                            navigation.navigate(\"Listings\") \r\n                        }\r\n                    }}\r\n                    // onPress={openImagePickerAsync}\r\n                    icon=\"plus\" \r\n                    title=\"Add\"/>\r\n        </AppScreen>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    center:{\r\n        alignItems: 'center',\r\n        marginTop: 55\r\n    },\r\n    text:{\r\n        fontWeight: 'bold',\r\n        marginBottom: 10\r\n    },\r\n    smallText: {\r\n        color: colors.black\r\n    },\r\n    input: {\r\n        height: 200,\r\n        width: '95%',\r\n        margin: 12,\r\n        borderWidth: 2,\r\n        borderRadius: 10,\r\n        padding: 10,\r\n        backgroundColor: colors.grey,\r\n        textAlignVertical: 'top'\r\n      },\r\n      error: {\r\n          color: '#FF0000',\r\n          fontSize: 13,\r\n          marginBottom: 8,\r\n          marginTop: -5\r\n\r\n      }\r\n})\r\n\r\nexport default NewListingScreen;"]},"metadata":{},"sourceType":"module"}