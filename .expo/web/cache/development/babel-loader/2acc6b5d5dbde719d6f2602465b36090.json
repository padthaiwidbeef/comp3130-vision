{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"H:\\\\Documents\\\\UNIVERSITY\\\\2021\\\\COMP3130\\\\majorAssignment\\\\app\\\\screens\\\\ListingScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport colors from \"../config/color\";\nimport AppScreen from \"../components/AppScreen\";\nimport AppText from \"../components/AppText\";\nimport AppCard from \"../components/AppCard\";\nimport AppPicker from \"../components/AppPicker\";\nimport DataManager from \"../config/DataManager\";\nvar categories = [{\n  label: \"Food\",\n  icon: \"food\",\n  value: 1\n}, {\n  label: \"Sightseeing\",\n  icon: \"earth\",\n  value: 2\n}, {\n  label: \"Accomodation\",\n  icon: \"bed\",\n  value: 3\n}];\n\nvar getListings = function getListings() {\n  var commonData = DataManager.getInstance();\n  return commonData.getListings();\n};\n\nvar initialListings = getListings();\n\nfunction ListingScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(initialListings),\n      _useState2 = _slicedToArray(_useState, 2),\n      listings = _useState2[0],\n      updateListings = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      category = _useState4[0],\n      setCategory = _useState4[1];\n\n  var sortListings = function sortListings(item) {\n    var sortedListings = initialListings.filter(function (listing) {\n      return listing.category === item;\n    });\n    updateListings(sortedListings);\n  };\n\n  var resetListings = function resetListings() {\n    updateListings(initialListings);\n    setCategory(null);\n  };\n\n  var alertDelete = function alertDelete(item) {\n    Alert.alert(\"Delete Listing\", \"Are you sure you want to delete this listing?\", [{\n      text: \"Cancel\"\n    }, {\n      text: \"Delete\",\n      onPress: function onPress() {\n        handleDelete(item);\n      }\n    }], {\n      cancelable: true,\n      onDismiss: function onDismiss() {\n        return Alert.alert(\"This alert was dismissed by tapping outside of the alert dialog.\");\n      }\n    });\n  };\n\n  var handleDelete = function handleDelete(listItem) {\n    var newListingList = listings.filter(function (item) {\n      return item.id !== listItem.id;\n    });\n    updateListings(newListingList);\n    console.log(newListingList);\n  };\n\n  var handleEdit = function handleEdit() {\n    updateListings(initialListings);\n    console.log('reset');\n  };\n\n  return React.createElement(AppScreen, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, React.createElement(AppText, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Listings\"), React.createElement(View, {\n    style: styles.rightSide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, React.createElement(AppPicker, {\n    selectedItem: category,\n    onSelectItem: function onSelectItem(item) {\n      setCategory(item), sortListings(item.label);\n    },\n    data: categories,\n    icon: \"dots-vertical\",\n    title: \"Sort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }), React.createElement(TouchableWithoutFeedback, {\n    onPress: resetListings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"refresh\",\n    size: 30,\n    color: colors.black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 75\n    }\n  })))), React.createElement(FlatList, {\n    style: styles.center,\n    data: listings,\n    keyExtractor: function keyExtractor(listing) {\n      return listing.id.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(AppCard, {\n        image: item.image,\n        title: item.place,\n        category: item.category,\n        deleteOnPress: function deleteOnPress() {\n          return alertDelete(item);\n        },\n        editOnPress: handleEdit,\n        onPress: function onPress() {\n          return navigation.navigate(\"MoreInformation\", {\n            item: item\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 18\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  text: {\n    fontWeight: 'bold',\n    marginBottom: 15,\n    fontSize: 20,\n    paddingLeft: 20\n  },\n  container: {\n    marginTop: 55\n  },\n  navbar: {\n    flex: 1,\n    justifyContent: 'flex-end'\n  },\n  row: {\n    flexDirection: 'row',\n    alignContent: 'center',\n    justifyContent: 'space-between',\n    paddingRight: 20,\n    marginBottom: 10\n  },\n  rightSide: {\n    flexDirection: 'row'\n  }\n});\nexport default ListingScreen;","map":{"version":3,"sources":["H:/Documents/UNIVERSITY/2021/COMP3130/majorAssignment/app/screens/ListingScreen.js"],"names":["React","useState","MaterialCommunityIcons","colors","AppScreen","AppText","AppCard","AppPicker","DataManager","categories","label","icon","value","getListings","commonData","getInstance","initialListings","ListingScreen","navigation","listings","updateListings","category","setCategory","sortListings","item","sortedListings","filter","listing","resetListings","alertDelete","Alert","alert","text","onPress","handleDelete","cancelable","onDismiss","listItem","newListingList","id","console","log","handleEdit","styles","container","row","rightSide","black","center","toString","image","place","navigate","StyleSheet","create","fontWeight","marginBottom","fontSize","paddingLeft","marginTop","navbar","flex","justifyContent","flexDirection","alignContent","paddingRight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, FlatList, Alert, TouchableWithoutFeedback} from 'react-native';\r\n\r\nimport {MaterialCommunityIcons} from '@expo/vector-icons'\r\nimport colors from '../config/color';\r\n\r\nimport AppScreen from '../components/AppScreen';\r\nimport AppText from '../components/AppText';\r\nimport AppCard from '../components/AppCard';\r\nimport AppPicker from '../components/AppPicker';\r\nimport DataManager from '../config/DataManager';\r\n\r\n\r\n\r\nconst categories = [\r\n    {label: \"Food\", icon: \"food\", value: 1},\r\n    {label: \"Sightseeing\", icon: \"earth\", value: 2},\r\n    {label: \"Accomodation\", icon: \"bed\", value: 3},\r\n]\r\n\r\nconst getListings = () => {\r\n    let commonData = DataManager.getInstance();\r\n    return commonData.getListings()\r\n}\r\n\r\nconst initialListings = getListings()\r\n\r\n\r\nfunction ListingScreen({navigation}) { \r\n\r\n    const [listings, updateListings] = useState(initialListings)\r\n    const [category, setCategory] = useState(null);\r\n\r\n    const sortListings = (item) => {\r\n        const sortedListings = initialListings.filter(listing => listing.category === item)\r\n        updateListings(sortedListings)\r\n    }\r\n\r\n    const resetListings = () => {\r\n        updateListings(initialListings)\r\n        setCategory(null)\r\n    }\r\n\r\n    const alertDelete = (item) => {\r\n        Alert.alert(\"Delete Listing\", \"Are you sure you want to delete this listing?\",\r\n        [\r\n          {\r\n            text: \"Cancel\",\r\n          },\r\n          {\r\n              text: \"Delete\",\r\n              onPress: () => {handleDelete(item)},\r\n          }\r\n        ],\r\n        {\r\n          cancelable: true,\r\n          onDismiss: () =>\r\n            Alert.alert(\r\n              \"This alert was dismissed by tapping outside of the alert dialog.\"\r\n            ),\r\n        }\r\n      )};\r\n\r\n    const handleDelete = (listItem) => {\r\n        const newListingList = listings.filter (item => item.id !== listItem.id);\r\n        updateListings(newListingList)\r\n        console.log(newListingList)\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        updateListings(initialListings)\r\n        console.log('reset')\r\n    }\r\n\r\n        return (\r\n            <AppScreen style={styles.container}>\r\n                <View style={styles.row}> \r\n                    <AppText style={styles.text}>Listings</AppText>\r\n                    <View style={styles.rightSide}>\r\n                        <AppPicker selectedItem={category} onSelectItem={item => {setCategory(item), sortListings(item.label)}} data={categories} icon='dots-vertical' title=\"Sort\"/>\r\n                        <TouchableWithoutFeedback onPress={resetListings}><MaterialCommunityIcons name='refresh' size={30} color={colors.black} /></TouchableWithoutFeedback>\r\n                    </View>\r\n                </View>\r\n                 <FlatList \r\n                 style={styles.center}\r\n                 data = {listings}\r\n                 keyExtractor = { listing => listing.id.toString()}\r\n                 renderItem = {({item}) => \r\n                    <AppCard\r\n                    image={item.image}\r\n                    title={item.place}\r\n                    category={item.category}\r\n                    deleteOnPress={() => alertDelete(item)}\r\n                    editOnPress={handleEdit}\r\n                    onPress={() => navigation.navigate(\"MoreInformation\", {item: item})}/>}\r\n                />\r\n            </AppScreen>\r\n        );\r\n    } \r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    text: {\r\n        fontWeight: 'bold',\r\n        marginBottom: 15,\r\n        fontSize: 20,\r\n        paddingLeft: 20\r\n    },\r\n    container: {\r\n        marginTop: 55\r\n    }, \r\n    navbar: {\r\n        flex: 1,\r\n        justifyContent: 'flex-end'\r\n    },\r\n    row: {\r\n        flexDirection: 'row',\r\n        alignContent: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingRight: 20,\r\n        marginBottom: 10,\r\n    },\r\n    rightSide: {\r\n        flexDirection: 'row'\r\n    }\r\n})\r\n\r\nexport default ListingScreen;"]},"metadata":{},"sourceType":"module"}